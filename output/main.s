;
; File generated by cc65 v 2.18 - Git dbba5f3
;
	.fopt		compiler,"cc65 v 2.18 - Git dbba5f3"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_acia_puts
	.import		_acia_put_newline
	.import		_acia_getc
	.import		_lcd_init
	.import		_lcd_puts
	.import		_lcd_w_reg
	.import		_ym_init
	.import		_ym_setreg
	.export		_c
	.export		_line
	.export		_note
	.export		_lcd_put_text
	.export		_print_f
	.export		_main

.segment	"RODATA"

S0001:
	.byte	$56,$6F,$6C,$6F,$76,$65,$00

.segment	"BSS"

_c:
	.res	1,$00
_line:
	.res	2,$00
_note:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ lcd_put_text (char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lcd_put_text: near

.segment	"CODE"

	jsr     pushax
	lda     #$80
	jsr     pusha
	lda     _line
	ldx     _line+1
	cpx     #$00
	bne     L0003
	cmp     #$00
	beq     L000C
	cmp     #$01
	beq     L000D
	cmp     #$02
	beq     L000E
	cmp     #$03
	beq     L000F
	bra     L0003
L000C:	lda     #$80
	bra     L0010
L000D:	lda     #$C0
	bra     L0010
L000E:	lda     #$90
	bra     L0010
L000F:	lda     #$D0
L0010:	sta     (sp)
L0003:	inc     _line
	bne     L0008
	inc     _line+1
L0008:	lda     _line
	cmp     #$04
	lda     _line+1
	sbc     #$00
	bvs     L000A
	eor     #$80
L000A:	bpl     L0009
	stz     _line
	stz     _line+1
L0009:	lda     (sp)
	jsr     _lcd_w_reg
	ldy     #$02
	jsr     ldaxysp
	jsr     _lcd_puts
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ print_f (char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print_f: near

.segment	"CODE"

	jsr     pushax
	jsr     _acia_put_newline
	jsr     ldax0sp
	jsr     _acia_puts
	jsr     ldax0sp
	jsr     _lcd_put_text
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	stz     _line
	stz     _line+1
	stz     _note
	stz     _note+1
	jsr     _lcd_init
	jsr     _ym_init
	lda     #$00
	jsr     pusha
	lda     #$22
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$27
	jsr     _ym_setreg
	lda     #$01
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$02
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$04
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$05
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$06
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$2B
	jsr     _ym_setreg
	lda     #$71
	jsr     pusha
	lda     #$30
	jsr     _ym_setreg
	lda     #$0D
	jsr     pusha
	lda     #$34
	jsr     _ym_setreg
	lda     #$33
	jsr     pusha
	lda     #$38
	jsr     _ym_setreg
	lda     #$01
	jsr     pusha
	lda     #$3C
	jsr     _ym_setreg
	lda     #$23
	jsr     pusha
	lda     #$40
	jsr     _ym_setreg
	lda     #$2D
	jsr     pusha
	lda     #$44
	jsr     _ym_setreg
	lda     #$26
	jsr     pusha
	lda     #$48
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$4C
	jsr     _ym_setreg
	lda     #$5F
	jsr     pusha
	lda     #$50
	jsr     _ym_setreg
	lda     #$99
	jsr     pusha
	lda     #$54
	jsr     _ym_setreg
	lda     #$5F
	jsr     pusha
	lda     #$58
	jsr     _ym_setreg
	lda     #$94
	jsr     pusha
	lda     #$5C
	jsr     _ym_setreg
	lda     #$05
	jsr     pusha
	lda     #$60
	jsr     _ym_setreg
	lda     #$05
	jsr     pusha
	lda     #$64
	jsr     _ym_setreg
	lda     #$05
	jsr     pusha
	lda     #$68
	jsr     _ym_setreg
	lda     #$07
	jsr     pusha
	lda     #$6C
	jsr     _ym_setreg
	lda     #$02
	jsr     pusha
	lda     #$70
	jsr     _ym_setreg
	lda     #$02
	jsr     pusha
	lda     #$74
	jsr     _ym_setreg
	lda     #$02
	jsr     pusha
	lda     #$78
	jsr     _ym_setreg
	lda     #$02
	jsr     pusha
	lda     #$7C
	jsr     _ym_setreg
	lda     #$11
	jsr     pusha
	lda     #$80
	jsr     _ym_setreg
	lda     #$11
	jsr     pusha
	lda     #$84
	jsr     _ym_setreg
	lda     #$11
	jsr     pusha
	lda     #$88
	jsr     _ym_setreg
	lda     #$A6
	jsr     pusha
	lda     #$8C
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$90
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$94
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$98
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$9C
	jsr     _ym_setreg
	lda     #$32
	jsr     pusha
	lda     #$B0
	jsr     _ym_setreg
	lda     #$C0
	jsr     pusha
	lda     #$B4
	jsr     _ym_setreg
	lda     #$00
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$22
	jsr     pusha
	lda     #$A4
	jsr     _ym_setreg
	lda     #$69
	jsr     pusha
	lda     #$A0
	jsr     _ym_setreg
L0002:	jsr     _acia_getc
	sta     _c
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     _print_f
	lda     _note
	ora     _note+1
	bne     L0005
	lda     _c
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	lda     #$01
	sta     _note
	stz     _note+1
	bra     L0002
L0005:	lda     #$00
	jsr     pusha
	lda     #$28
	jsr     _ym_setreg
	stz     _note
	stz     _note+1
	bra     L0002

.endproc

