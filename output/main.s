;
; File generated by cc65 v 2.18 - Git dbba5f3
;
	.fopt		compiler,"cc65 v 2.18 - Git dbba5f3"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_acia_puts
	.import		_acia_put_newline
	.import		_lcd_init
	.import		_lcd_puts
	.import		_lcd_w_reg
	.import		_ym_init
	.import		_delay
	.import		_getByte
	.import		_ym_setreg
	.import		_ym_setreg_A1
	.export		_song_size
	.export		_song
	.export		_c
	.export		_line
	.export		_note
	.export		_song_pos
	.export		_i
	.export		_i2
	.export		_waitL
	.export		_waitH
	.export		_cmd
	.export		_lcd_put_text
	.export		_print_f
	.export		_main

.segment	"DATA"

_song_size:
	.word	$0238
_song:
	.byte	$56
	.byte	$67
	.byte	$6D
	.byte	$20
	.byte	$34
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$99
	.byte	$9E
	.byte	$36
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$9E
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$95
	.byte	$02
	.byte	$00
	.byte	$67
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$32
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$10
	.byte	$00
	.byte	$B6
	.byte	$0A
	.byte	$75
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$52
	.byte	$22
	.byte	$08
	.byte	$52
	.byte	$27
	.byte	$00
	.byte	$52
	.byte	$B4
	.byte	$C0
	.byte	$52
	.byte	$B5
	.byte	$C0
	.byte	$52
	.byte	$B6
	.byte	$C0
	.byte	$53
	.byte	$B4
	.byte	$C0
	.byte	$53
	.byte	$B5
	.byte	$C0
	.byte	$53
	.byte	$B6
	.byte	$C0
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$28
	.byte	$01
	.byte	$52
	.byte	$28
	.byte	$02
	.byte	$52
	.byte	$28
	.byte	$03
	.byte	$52
	.byte	$28
	.byte	$04
	.byte	$52
	.byte	$28
	.byte	$05
	.byte	$52
	.byte	$28
	.byte	$06
	.byte	$50
	.byte	$9F
	.byte	$50
	.byte	$BF
	.byte	$50
	.byte	$DF
	.byte	$50
	.byte	$FF
	.byte	$52
	.byte	$30
	.byte	$24
	.byte	$52
	.byte	$40
	.byte	$28
	.byte	$52
	.byte	$50
	.byte	$1F
	.byte	$52
	.byte	$60
	.byte	$09
	.byte	$52
	.byte	$70
	.byte	$00
	.byte	$52
	.byte	$80
	.byte	$05
	.byte	$52
	.byte	$90
	.byte	$00
	.byte	$52
	.byte	$34
	.byte	$31
	.byte	$52
	.byte	$44
	.byte	$1F
	.byte	$52
	.byte	$54
	.byte	$1F
	.byte	$52
	.byte	$64
	.byte	$00
	.byte	$52
	.byte	$74
	.byte	$00
	.byte	$52
	.byte	$84
	.byte	$05
	.byte	$52
	.byte	$94
	.byte	$00
	.byte	$52
	.byte	$38
	.byte	$74
	.byte	$52
	.byte	$48
	.byte	$2C
	.byte	$52
	.byte	$58
	.byte	$1F
	.byte	$52
	.byte	$68
	.byte	$09
	.byte	$52
	.byte	$78
	.byte	$00
	.byte	$52
	.byte	$88
	.byte	$05
	.byte	$52
	.byte	$98
	.byte	$00
	.byte	$52
	.byte	$3C
	.byte	$51
	.byte	$52
	.byte	$4C
	.byte	$08
	.byte	$52
	.byte	$5C
	.byte	$0B
	.byte	$52
	.byte	$6C
	.byte	$09
	.byte	$52
	.byte	$7C
	.byte	$00
	.byte	$52
	.byte	$8C
	.byte	$05
	.byte	$52
	.byte	$9C
	.byte	$00
	.byte	$52
	.byte	$B0
	.byte	$3A
	.byte	$52
	.byte	$B4
	.byte	$C1
	.byte	$52
	.byte	$A4
	.byte	$1A
	.byte	$52
	.byte	$A0
	.byte	$84
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$B0
	.byte	$52
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$14
	.byte	$52
	.byte	$A0
	.byte	$BF
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$FF
	.byte	$FF
	.byte	$61
	.byte	$FF
	.byte	$FF
	.byte	$61
	.byte	$24
	.byte	$0F
	.byte	$52
	.byte	$30
	.byte	$71
	.byte	$52
	.byte	$40
	.byte	$0F
	.byte	$52
	.byte	$50
	.byte	$0B
	.byte	$52
	.byte	$60
	.byte	$00
	.byte	$52
	.byte	$34
	.byte	$72
	.byte	$52
	.byte	$44
	.byte	$14
	.byte	$52
	.byte	$54
	.byte	$0B
	.byte	$52
	.byte	$84
	.byte	$07
	.byte	$52
	.byte	$38
	.byte	$31
	.byte	$52
	.byte	$48
	.byte	$0F
	.byte	$52
	.byte	$58
	.byte	$0B
	.byte	$52
	.byte	$68
	.byte	$00
	.byte	$52
	.byte	$3C
	.byte	$32
	.byte	$52
	.byte	$4C
	.byte	$19
	.byte	$52
	.byte	$6C
	.byte	$00
	.byte	$52
	.byte	$8C
	.byte	$07
	.byte	$52
	.byte	$B0
	.byte	$07
	.byte	$52
	.byte	$B4
	.byte	$C0
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$04
	.byte	$52
	.byte	$A0
	.byte	$BF
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$56
	.byte	$0A
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$0B
	.byte	$52
	.byte	$A0
	.byte	$C5
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$56
	.byte	$0A
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$1C
	.byte	$52
	.byte	$A0
	.byte	$BF
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$56
	.byte	$0A
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$23
	.byte	$52
	.byte	$A0
	.byte	$C5
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$56
	.byte	$0A
	.byte	$52
	.byte	$28
	.byte	$00
	.byte	$52
	.byte	$A4
	.byte	$0C
	.byte	$52
	.byte	$A0
	.byte	$BF
	.byte	$52
	.byte	$28
	.byte	$F0
	.byte	$61
	.byte	$56
	.byte	$0A
	.byte	$66
	.byte	$47
	.byte	$64
	.byte	$33
	.byte	$20
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$7A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$53
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$67
	.byte	$00
	.byte	$61
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$4D
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$67
	.byte	$00
	.byte	$61
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$72
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$76
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$2F
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$47
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$6E
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$73
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$73
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$6C
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$6B
	.byte	$00
	.byte	$27
	.byte	$00
	.byte	$73
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$66
	.byte	$00
	.byte	$6C
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$4D
	.byte	$00
	.byte	$61
	.byte	$00
	.byte	$73
	.byte	$00
	.byte	$6B
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$54
	.byte	$00
	.byte	$72
	.byte	$00
	.byte	$61
	.byte	$00
	.byte	$63
	.byte	$00
	.byte	$6B
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$72
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_song_pos:
	.word	$003F

.segment	"BSS"

_c:
	.res	1,$00
_line:
	.res	2,$00
_note:
	.res	2,$00
_i:
	.res	2,$00
_i2:
	.res	2,$00
_waitL:
	.res	2,$00
_waitH:
	.res	2,$00
_cmd:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ lcd_put_text (char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lcd_put_text: near

.segment	"CODE"

	jsr     pushax
	lda     #$80
	jsr     pusha
	lda     _line
	ldx     _line+1
	cpx     #$00
	bne     L0003
	cmp     #$00
	beq     L000C
	cmp     #$01
	beq     L000D
	cmp     #$02
	beq     L000E
	cmp     #$03
	beq     L000F
	bra     L0003
L000C:	lda     #$80
	bra     L0010
L000D:	lda     #$C0
	bra     L0010
L000E:	lda     #$90
	bra     L0010
L000F:	lda     #$D0
L0010:	sta     (sp)
L0003:	inc     _line
	bne     L0008
	inc     _line+1
L0008:	lda     _line
	cmp     #$04
	lda     _line+1
	sbc     #$00
	bvs     L000A
	eor     #$80
L000A:	bpl     L0009
	stz     _line
	stz     _line+1
L0009:	lda     (sp)
	jsr     _lcd_w_reg
	ldy     #$02
	jsr     ldaxysp
	jsr     _lcd_puts
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ print_f (char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print_f: near

.segment	"CODE"

	jsr     pushax
	jsr     _acia_put_newline
	jsr     ldax0sp
	jsr     _acia_puts
	jsr     ldax0sp
	jsr     _lcd_put_text
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	stz     _line
	stz     _line+1
	stz     _note
	stz     _note+1
	jsr     _lcd_init
	jsr     _ym_init
L0002:	jsr     _getByte
	sta     _cmd
	lda     _cmd
	cmp     #$50
	beq     L0007
	cmp     #$52
	beq     L0008
	cmp     #$53
	beq     L0009
	cmp     #$61
	beq     L000A
	cmp     #$62
	jeq     L004F
	cmp     #$63
	jeq     L0050
	cmp     #$70
	jeq     L0051
	cmp     #$71
	jeq     L0052
	cmp     #$72
	jeq     L0053
	cmp     #$73
	jeq     L0054
	cmp     #$74
	jeq     L0055
	cmp     #$75
	jeq     L0056
	bra     L0002
L0007:	jsr     _getByte
	bra     L0002
L0008:	jsr     _getByte
	jsr     pusha
	jsr     _getByte
	jsr     _ym_setreg
	bra     L0002
L0009:	jsr     _getByte
	jsr     pusha
	jsr     _getByte
	jsr     _ym_setreg_A1
	bra     L0002
L000A:	jsr     _getByte
	sta     _waitL
	stx     _waitL+1
	jsr     _getByte
	sta     _waitH
	stx     _waitH+1
	stz     _i
	stz     _i+1
L000B:	lda     _i
	ldx     _i+1
	jsr     pushax
	lda     _waitH
	ldx     _waitH+1
	jsr     tosicmp
	beq     L004D
	jpl     L0002
L004D:	stz     _i2
	stz     _i2+1
L0010:	lda     _i2
	ldx     _i2+1
	jsr     pushax
	lda     _waitL
	ldx     _waitL+1
	jsr     tosicmp
	beq     L004E
	bpl     L000D
L004E:	jsr     _delay
	inc     _i2
	bne     L0010
	inc     _i2+1
	bra     L0010
L000D:	inc     _i
	bne     L000B
	inc     _i+1
	bra     L000B
L004F:	stz     _i
	stz     _i+1
L0016:	lda     _i
	cmp     #$E0
	lda     _i+1
	sbc     #$02
	bvc     L001A
	eor     #$80
L001A:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0016
	inc     _i+1
	bra     L0016
L0050:	stz     _i
	stz     _i+1
L001D:	lda     _i
	cmp     #$44
	lda     _i+1
	sbc     #$03
	bvc     L0021
	eor     #$80
L0021:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L001D
	inc     _i+1
	bra     L001D
L0051:	lda     #$01
	sta     _i
	stz     _i+1
L0024:	lda     _i
	cmp     #$02
	lda     _i+1
	sbc     #$00
	bvc     L0028
	eor     #$80
L0028:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0024
	inc     _i+1
	bra     L0024
L0052:	lda     #$01
	sta     _i
	stz     _i+1
L002B:	lda     _i
	cmp     #$03
	lda     _i+1
	sbc     #$00
	bvc     L002F
	eor     #$80
L002F:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L002B
	inc     _i+1
	bra     L002B
L0053:	lda     #$01
	sta     _i
	stz     _i+1
L0032:	lda     _i
	cmp     #$04
	lda     _i+1
	sbc     #$00
	bvc     L0036
	eor     #$80
L0036:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0032
	inc     _i+1
	bra     L0032
L0054:	lda     #$01
	sta     _i
	stz     _i+1
L0039:	lda     _i
	cmp     #$05
	lda     _i+1
	sbc     #$00
	bvc     L003D
	eor     #$80
L003D:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0039
	inc     _i+1
	bra     L0039
L0055:	lda     #$01
	sta     _i
	stz     _i+1
L0040:	lda     _i
	cmp     #$06
	lda     _i+1
	sbc     #$00
	bvc     L0044
	eor     #$80
L0044:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0040
	inc     _i+1
	bra     L0040
L0056:	lda     #$01
	sta     _i
	stz     _i+1
L0047:	lda     _i
	cmp     #$06
	lda     _i+1
	sbc     #$00
	bvc     L004B
	eor     #$80
L004B:	jpl     L0002
	jsr     _delay
	inc     _i
	bne     L0047
	inc     _i+1
	bra     L0047

.endproc

