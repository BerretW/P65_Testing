;
; File generated by cc65 v 2.18 - Git dbba5f3
;
	.fopt		compiler,"cc65 v 2.18 - Git dbba5f3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_acia_puts
	.import		_acia_put_newline
	.import		_acia_getc
	.import		_lcd_init
	.import		_lcd_puts
	.import		_lcd_w_reg
	.export		_c
	.export		_line
	.export		_lcd_put_text
	.export		_print_f
	.export		_main

.segment	"RODATA"

S0001:
	.byte	$56,$6F,$6C,$6F,$76,$65,$00

.segment	"BSS"

_c:
	.res	1,$00
_line:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ lcd_put_text (char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lcd_put_text: near

.segment	"CODE"

	jsr     pushax
	lda     #$80
	jsr     pusha
	lda     _line
	ldx     _line+1
	cpx     #$00
	bne     L0003
	cmp     #$00
	beq     L000C
	cmp     #$01
	beq     L000D
	cmp     #$02
	beq     L000E
	cmp     #$03
	beq     L000F
	jmp     L0003
L000C:	lda     #$80
	jmp     L0010
L000D:	lda     #$C0
	jmp     L0010
L000E:	lda     #$90
	jmp     L0010
L000F:	lda     #$D0
L0010:	ldy     #$00
	sta     (sp),y
L0003:	inc     _line
	bne     L0008
	inc     _line+1
L0008:	lda     _line
	cmp     #$04
	lda     _line+1
	sbc     #$00
	bvs     L000A
	eor     #$80
L000A:	bpl     L0009
	lda     #$00
	sta     _line
	sta     _line+1
L0009:	ldy     #$00
	lda     (sp),y
	jsr     _lcd_w_reg
	ldy     #$02
	jsr     ldaxysp
	jsr     _lcd_puts
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ print_f (const char *s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print_f: near

.segment	"CODE"

	jsr     pushax
	jsr     _acia_put_newline
	jsr     ldax0sp
	jsr     _acia_puts
	jsr     ldax0sp
	jsr     _lcd_put_text
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$00
	sta     _line
	sta     _line+1
	jsr     _lcd_init
L0002:	jsr     _acia_getc
	sta     _c
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     _print_f
	jmp     L0002

.endproc

